1)Имеем несколько классов, которые между собой взаимодействуют, достаточно ли объявить их в main`e или необходимо вызывать в каждом из классов, который с ними оперирует?
2)//Можем ли мы в нашем примере обращаться к классам без использования методов, просто считывая поля экземпляров, либо создавать методы в каждом из классов, которые будут возвращать параметры экземпляра
3)//Примеры реального использования связанных списков?
4)Разница между передачей по ссылке и по значению
5)//При вызове конструктора использовать внутри него метод, нормальная ли практика?
6)Есть некий класс, объекты котрого хранятся в Set и маппируются в HashMap, при изменении параметров объекта класса, обязательно ли создавать для этого функцию, или достаточно заново создать экземпляр с таким именем, тогда по идее в Set он перезапишется, как и в HashMap,а если является ключом то новой записи не должно добавляться  
//7)Создать структуру древовидную структуру
8)Kак инициализировать массив данными при инициализации
9) Две функции ниже при вызове второй стек переполняется, верно ли, что это из-за того, что метод toString пытаясь привести все аргументы к строке и видя this вызывает для него как раз сам себя?
public void print() {
        System.out.println("Hall " + this + "\nAddress: " + address + "\nGameTime: " + gameTime);
    }

    @Override
    public String toString() {
        return "Hall " + this + "\nAddress: " + address + "\nGameTime: " + gameTime;//"The best hall ever";
    }
10) Аналогичный вопрос как с методами, вызов конструктора другого класса при создании объекта текущего ( ответ видимо аналогичен, но на всякий случай )
11) ЭТО для себя : проверить, что будет если геттером или выводом в консоль считать неинициализированную в конструкторе переменную класса 
